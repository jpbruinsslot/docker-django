#!/usr/bin/env bash

set -e

PROJECT=$1
shift

if [[ $1 == manage ]]
then
	shift
	docker exec -it ${PROJECT}_app_1 /usr/bin/python3 django/${PROJECT}/manage.py "$@"
	exit $?
fi

if [[ $1 == bash ]]
then
	shift
	docker exec -it ${PROJECT}_app_1 bash "$@"
	exit $?
fi

if [[ $1 == reload ]]
then
	docker exec -it ${PROJECT}_app_1 bash /srv/config/reload.sh
	docker exec -it ${PROJECT}_www_1 bash /srv/config/reload.sh
	exit $?
fi

if [[ $1 == upgrade ]]
then
	docker-compose -p $PROJECT -f ./docker-compose.yml -f ./docker-compose.$PROJECT.yml build --no-cache --pull
	docker-compose -p $PROJECT -f ./docker-compose.yml -f ./docker-compose.$PROJECT.yml up -d
	exit $?
fi

exec docker-compose -p $PROJECT -f ./docker-compose.yml -f ./docker-compose.$PROJECT.yml "$@"

# TODO: add backup:
# via http://docs.docker.com/engine/userguide/dockervolumes/#backup-restore-or-migrate-data-volumes
# docker run --rm -it --volumes-from starter_cert_1 -v $(pwd):/backup ubuntu /bin/bash